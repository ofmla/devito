##############################################################
# README with base system requirements
# https://ngc.nvidia.com/catalog/containers/hpc:pgi-compilers
#
# BUILD: docker build --file docker/Dockerfile.nvidia --tag devito:nvidia.pgi .
# RUN: docker run --runtime=nvidia --gpus all --rm -it -p 8888:8888 -p 8787:8787 -p 8786:8786 devito:nvidia.pgi
##############################################################
FROM nvcr.io/hpc/pgi-compilers:ce

ENV DEBIAN_FRONTEND noninteractive 

# The NGC PGI container has the C, C++, and MPI set to compile using the PGI compilers and libraries. The 
# libraries and tools needed during the install of Devito require the gcc libraries, compilers, and tools. 
# Setting the environment for gcc here at the top of the dockerfile and resets the environment to 
# PGI at the end of the dockerfile.
ENV CC="/usr/bin/gcc"
ENV CXX="/usr/bin/g++"
RUN mv '/opt/pgi/linux86-64/19.10/mpi/openmpi-3.1.3/bin/mpicc' '/opt/pgi/linux86-64/19.10/mpi/openmpi-3.1.3/bin/mpicc.devito'

# nodesource: nvdashboard requires nodejs>=10  
RUN apt-get update -y && \
    apt-get install -y -q \
        apt-utils \
        curl \
        mpich libmpich-dev && \
    curl -sL https://deb.nodesource.com/setup_12.x | bash - && \
    apt-get install -y -q \
        nvidia-cuda-toolkit \
        python3.6 \
        python3-pip python3-setuptools python3-dev python3-multidict python3-venv \
        nodejs \
        texlive-latex-extra texlive-fonts-recommended dvipng cm-super && \
    apt-get update -y && \
    rm -rf /var/lib/apt/lists/*


ADD ./requirements.txt /app/requirements.txt
ADD ./requirements-optional.txt /app/requirements-optional.txt
ADD ./requirements-nvidia.txt /app/requirements-nvidia.txt

RUN python3 -m venv /venv && \
    /venv/bin/pip install --no-cache-dir --upgrade pip && \
    /venv/bin/pip install --no-cache-dir wheel && \
    /venv/bin/pip install --no-cache-dir -r /app/requirements.txt && \
    /venv/bin/pip install --no-cache-dir -r /app/requirements-optional.txt && \
    /venv/bin/pip install --no-cache-dir -r /app/requirements-nvidia.txt
    
ADD ./devito /app/devito
ADD ./tests /app/tests
ADD ./scripts /app/scripts
ADD ./examples /app/examples
ADD ./benchmarks /app/benchmarks
COPY setup.cfg /app/

ADD docker/run-jupyterlab.sh /jupyter
ADD docker/run-tests.sh /tests
ADD docker/run-print-defaults.sh /print-defaults
ADD docker/entrypoint.sh /docker-entrypoint.sh
ADD docker/nvdashboard.json /app/nvdashboard.json

RUN chmod +x /print-defaults /jupyter /tests /docker-entrypoint.sh && \
    /venv/bin/jupyter labextension install jupyterlab-nvdashboard && \
    /venv/bin/jupyter labextension install dask-labextension && \
    /venv/bin/jupyter serverextension enable dask_labextension && \
    /venv/bin/jupyter lab workspaces import /app/nvdashboard.json

# Environment Variables for OpenACC Builds
# Reference: https://github.com/devitocodes/devito/wiki/FAQ#can-i-manually-modify-the-c-code-generated-by-devito-and-test-these-modifications
# Set arch to PGI (pgcc)
ENV DEVITO_ARCH="pgcc" 
ENV DEVITO_LANGUAGE="openacc"
ENV DEVITO_PLATFORM=nvidiaX
# Options: [unset, 1] For PGI openacc; Should only be set after a first execution of the benchmark
# ENV DEVITO_JIT_BACKDOOR=1 

# Enable logging, Options: [unset, PERF, DEBUG]
ENV DEVITO_LOGGING=DEBUG 
ENV PGI_ACC_TIME=1 

# Resetting the environment to PGI after finishing the install of the requirements for Devito and tools.
ENV CC="/opt/pgi/linux86-64-llvm/19.10/bin/pgcc"
ENV CXX="/opt/pgi/linux86-64-llvm/19.10/bin/pgc++"
RUN mv '/opt/pgi/linux86-64/19.10/mpi/openmpi-3.1.3/bin/mpicc.devito' '/opt/pgi/linux86-64/19.10/mpi/openmpi-3.1.3/bin/mpicc' 

WORKDIR /app
EXPOSE 8888
ENTRYPOINT ["/docker-entrypoint.sh"]
CMD ["/jupyter"]
